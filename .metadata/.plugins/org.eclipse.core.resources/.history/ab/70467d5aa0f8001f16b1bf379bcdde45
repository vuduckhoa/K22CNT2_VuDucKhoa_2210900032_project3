package com.springmvc.dao;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import com.springmvc.beans.Vdk_quantri;

public class VDK_quantridao {
    JdbcTemplate template;

    public void setTemplate(JdbcTemplate template) {
        this.template = template;
    }

    private String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hashedBytes = md.digest(password.getBytes());
            StringBuilder sb = new StringBuilder();
            for (byte b : hashedBytes) {
                sb.append(String.format("%02x", b));
            }
            return sb.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }

    public int save(Vdk_quantri p) {
        String hashedPassword = hashPassword(p.getVdk_MatKhau());
        String sql = "insert into Vdk_quantri (vdk_TaiKhoan, vdk_MatKhau, vdk_TrangThai) values (?, ?, ?)";
        return template.update(sql, p.getVdk_TaiKhoan(), hashedPassword, p.isVdk_TrangThai());
    }

    public int update(Vdk_quantri p) {
        String hashedPassword = hashPassword(p.getVdk_MatKhau());
        String sql = "update Vdk_quantri set vdk_TaiKhoan = ?, vdk_MatKhau = ?, vdk_TrangThai = ? where id = ?";
        return template.update(sql, p.getVdk_TaiKhoan(), hashedPassword, p.isVdk_TrangThai(), p.getId());
    }

    public int delete(int id) {
        String sql = "delete from Vdk_quantri where id = ?";
        return template.update(sql, id);
    }

    public Vdk_quantri getEmpById(int id) {
        String sql = "select * from Vdk_quantri where id = ?";
        return template.queryForObject(sql, new Object[]{id}, new BeanPropertyRowMapper<>(Vdk_quantri.class));
    }

    public List<Vdk_quantri> getEmployees() {
        String sql = "select * from Vdk_quantri";
        return template.query(sql, new RowMapper<Vdk_quantri>() {
            public Vdk_quantri mapRow(ResultSet rs, int row) throws SQLException {
                Vdk_quantri e = new Vdk_quantri();
                e.setId(rs.getInt("id"));
                e.setVdk_TaiKhoan(rs.getString("vdk_TaiKhoan"));
                e.setVdk_MatKhau(rs.getString("vdk_MatKhau"));
                e.setVdk_TrangThai(rs.getBoolean("vdk_TrangThai"));
                return e;
            }
        });
    }

    public Vdk_quantri login(String taiKhoan, String matKhau) {
        String sql = "SELECT * FROM Vdk_quantri WHERE vdk_TaiKhoan = ?";
        try {
            Vdk_quantri admin = template.queryForObject(sql, new Object[]{taiKhoan}, 
                new BeanPropertyRowMapper<>(Vdk_quantri.class));
            
            if (admin.getVdk_MatKhau().equals(hashPassword(matKhau))) {
                return admin;
            } else {
                return null;
            }
        } catch (Exception e) {
            return null;
        }
    }
}