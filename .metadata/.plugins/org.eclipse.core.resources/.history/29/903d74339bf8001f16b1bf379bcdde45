package com.springmvc.controllers;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.springmvc.beans.Vdk_giohang;
import com.springmvc.beans.Vdk_sanpham;
import com.springmvc.beans.Vdk_thietbi;
import com.springmvc.dao.Vdk_sanphamdao;
import com.springmvc.dao.Vdk_thietbidao;

import javax.servlet.http.HttpSession;

@Controller  
public class HomeController {  

    @Autowired  
    Vdk_sanphamdao dao; // DAO cho sản phẩm
    
    @Autowired
    Vdk_thietbidao thietbidao; // DAO cho thiết bị

    // --- Quản lý Sản Phẩm ---
    
    @GetMapping("/giohang")
    public String showCart(HttpSession session, Model model) {
        List<Vdk_giohang> cartItems = (List<Vdk_giohang>) session.getAttribute("cartItems");
        if (cartItems == null) {
            cartItems = new ArrayList<>();
        }
        model.addAttribute("cartItems", cartItems);
        model.addAttribute("totalAmount", calculateTotal(cartItems));
        return "giohang";
    }

    @GetMapping("/add-to-cart")
    public String addToCart(@RequestParam int id, 
                            @RequestParam String vdk_name, 
                            @RequestParam String vdk_hinhanh, 
                            @RequestParam int vdk_gia, 
                            HttpSession session) {
        List<Vdk_giohang> cartItems = (List<Vdk_giohang>) session.getAttribute("cartItems");
        if (cartItems == null) {
            cartItems = new ArrayList<>();
        }
        boolean exists = false;
        for (Vdk_giohang item : cartItems) {
            if (item.getId() == id) {
                item.setVdk_soluong(item.getVdk_soluong() + 1);
                exists = true;
                break;
            }
        }
        if (!exists) {
            cartItems.add(new Vdk_giohang(id, vdk_name, vdk_hinhanh, vdk_gia, 1));
        }
        session.setAttribute("cartItems", cartItems);
        return "redirect:/giohang";
    }

    @GetMapping("/xoagiohang/{id}")
    public String deletegiohang(@PathVariable int id, HttpSession session) {
        List<Vdk_giohang> cartItems = (List<Vdk_giohang>) session.getAttribute("cartItems");
        if (cartItems != null) {
            cartItems.removeIf(item -> item.getId() == id);
            session.setAttribute("cartItems", cartItems);
        }
        return "redirect:/giohang";
    }

    private int calculateTotal(List<Vdk_giohang> cartItems) {
        int total = 0;
        for (Vdk_giohang item : cartItems) {
            total += item.getVdk_gia() * item.getVdk_soluong();
        }
        return total;
    }

    @GetMapping("/saveform")
    public String showform(Model m) {
        m.addAttribute("command", new Vdk_sanpham());
        return "saveform";
    }

    @PostMapping("/save")
    public String save(@ModelAttribute("user") Vdk_sanpham vdk_sanpham) {
        dao.save(vdk_sanpham);
        return "redirect:/viewform";
    }

    @GetMapping("/viewform")
    public String viewemp(Model m) {
        List<Vdk_sanpham> list = dao.getEmployees();
        m.addAttribute("list", list);
        return "viewform";
    }

    @GetMapping("/sua/{id}")
    public String edit(@PathVariable int id, Model m) {
        Vdk_sanpham vdk_sanpham = dao.getEmpById(id);
        m.addAttribute("command", vdk_sanpham);
        return "editform";
    }

    @PostMapping("/luu")
    public String luu(@ModelAttribute("user") Vdk_sanpham vdk_sanpham) {
        dao.update(vdk_sanpham);
        return "redirect:/viewform";
    }

    @GetMapping("/xoa/{id}")  
    public String delete(@PathVariable int id) {
        dao.delete(id);
        return "redirect:/viewform";
    }

    // --- Quản lý Thiết Bị ---
    
    @GetMapping("/viewthietbi")
    public String viewThietBi(Model m) {
        List<Vdk_thietbi> list = thietbidao.getAllThietBi();
        m.addAttribute("list", list);
        return "viewthietbi";
    }

    @GetMapping("/themthietbi")
    public String showThietBiForm(Model m) {
        m.addAttribute("command", new Vdk_thietbi());
        return "savethietbi";
    }

    @PostMapping("/savethietbi")
    public String saveThietBi(@ModelAttribute("thietbi") Vdk_thietbi vdk_thietbi) {
        thietbidao.save(vdk_thietbi);
        return "redirect:/viewthietbi";
    }

    @GetMapping("/suathietbi/{id}")
    public String editThietBi(@PathVariable int id, Model m) {
        Vdk_thietbi vdk_thietbi = thietbidao.getThietBiById(id);
        m.addAttribute("command", vdk_thietbi);
        return "editthietbi";
    }

    @PostMapping("/luuthietbi")
    public String updateThietBi(@ModelAttribute("thietbi") Vdk_thietbi vdk_thietbi) {
        thietbidao.update(vdk_thietbi);
        return "redirect:/viewthietbi";
    }

    @GetMapping("/xoathietbi/{id}")  
    public String deleteThietBi(@PathVariable int id) {
        thietbidao.delete(id);
        return "redirect:/viewthietbi";
    }
}
